{
    "Command": "docker container run",
    "Description": "Run a command in a new container",
    "Usage": "\tdocker container run [OPTIONS] IMAGE [COMMAND] [ARG...]",
    "options": {
        "indent": 38,
        "data": [
            {
                "cmd": "      --add-host list                 ",
                "dcr": " Add a custom host-to-IP mapping (host:ip)"
            },
            {
                "cmd": "  -a, --attach list                   ",
                "dcr": " Attach to STDIN, STDOUT or STDERR"
            },
            {
                "cmd": "      --blkio-weight uint16           ",
                "dcr": " Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)"
            },
            {
                "cmd": "      --blkio-weight-device list      ",
                "dcr": " Block IO weight (relative device weight) (default [])"
            },
            {
                "cmd": "      --cap-add list                  ",
                "dcr": " Add Linux capabilities"
            },
            {
                "cmd": "      --cap-drop list                 ",
                "dcr": " Drop Linux capabilities"
            },
            {
                "cmd": "      --cgroup-parent string          ",
                "dcr": " Optional parent cgroup for the container"
            },
            {
                "cmd": "      --cidfile string                ",
                "dcr": " Write the container ID to the file"
            },
            {
                "cmd": "      --cpu-period int                ",
                "dcr": " Limit CPU CFS (Completely Fair Scheduler) period"
            },
            {
                "cmd": "      --cpu-quota int                 ",
                "dcr": " Limit CPU CFS (Completely Fair Scheduler) quota"
            },
            {
                "cmd": "      --cpu-rt-period int             ",
                "dcr": " Limit CPU real-time period in microseconds"
            },
            {
                "cmd": "      --cpu-rt-runtime int            ",
                "dcr": " Limit CPU real-time runtime in microseconds"
            },
            {
                "cmd": "  -c, --cpu-shares int                ",
                "dcr": " CPU shares (relative weight)"
            },
            {
                "cmd": "      --cpus decimal                  ",
                "dcr": " Number of CPUs"
            },
            {
                "cmd": "      --cpuset-cpus string            ",
                "dcr": " CPUs in which to allow execution (0-3, 0,1)"
            },
            {
                "cmd": "      --cpuset-mems string            ",
                "dcr": " MEMs in which to allow execution (0-3, 0,1)"
            },
            {
                "cmd": "  -d, --detach                        ",
                "dcr": " Run container in background and print container ID"
            },
            {
                "cmd": "      --detach-keys string            ",
                "dcr": " Override the key sequence for detaching a container"
            },
            {
                "cmd": "      --device list                   ",
                "dcr": " Add a host device to the container"
            },
            {
                "cmd": "      --device-cgroup-rule list       ",
                "dcr": " Add a rule to the cgroup allowed devices list"
            },
            {
                "cmd": "      --device-read-bps list          ",
                "dcr": " Limit read rate (bytes per second) from a device (default [])"
            },
            {
                "cmd": "      --device-read-iops list         ",
                "dcr": " Limit read rate (IO per second) from a device (default [])"
            },
            {
                "cmd": "      --device-write-bps list         ",
                "dcr": " Limit write rate (bytes per second) to a device (default [])"
            },
            {
                "cmd": "      --device-write-iops list        ",
                "dcr": " Limit write rate (IO per second) to a device (default [])"
            },
            {
                "cmd": "      --disable-content-trust         ",
                "dcr": " Skip image verification (default true)"
            },
            {
                "cmd": "      --dns list                      ",
                "dcr": " Set custom DNS servers"
            },
            {
                "cmd": "      --dns-option list               ",
                "dcr": " Set DNS options"
            },
            {
                "cmd": "      --dns-search list               ",
                "dcr": " Set custom DNS search domains"
            },
            {
                "cmd": "      --entrypoint string             ",
                "dcr": " Overwrite the default ENTRYPOINT of the image"
            },
            {
                "cmd": "  -e, --env list                      ",
                "dcr": " Set environment variables"
            },
            {
                "cmd": "      --env-file list                 ",
                "dcr": " Read in a file of environment variables"
            },
            {
                "cmd": "      --expose list                   ",
                "dcr": " Expose a port or a range of ports"
            },
            {
                "cmd": "      --group-add list                ",
                "dcr": " Add additional groups to join"
            },
            {
                "cmd": "      --health-cmd string             ",
                "dcr": " Command to run to check health"
            },
            {
                "cmd": "      --health-interval duration      ",
                "dcr": " Time between running the check (ms|s|m|h) (default 0s)"
            },
            {
                "cmd": "      --health-retries int            ",
                "dcr": " Consecutive failures needed to report unhealthy"
            },
            {
                "cmd": "      --health-start-period duration  ",
                "dcr": " Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)"
            },
            {
                "cmd": "      --health-timeout duration       ",
                "dcr": " Maximum time to allow one check to run (ms|s|m|h) (default 0s)"
            },
            {
                "cmd": "      --help                          ",
                "dcr": " Print usage"
            },
            {
                "cmd": "  -h, --hostname string               ",
                "dcr": " Container host name"
            },
            {
                "cmd": "      --init                          ",
                "dcr": " Run an init inside the container that forwards signals and reaps processes"
            },
            {
                "cmd": "  -i, --interactive                   ",
                "dcr": " Keep STDIN open even if not attached"
            },
            {
                "cmd": "      --ip string                     ",
                "dcr": " IPv4 address (e.g., 172.30.100.104)"
            },
            {
                "cmd": "      --ip6 string                    ",
                "dcr": " IPv6 address (e.g., 2001:db8::33)"
            },
            {
                "cmd": "      --ipc string                    ",
                "dcr": " IPC mode to use"
            },
            {
                "cmd": "      --isolation string              ",
                "dcr": " Container isolation technology"
            },
            {
                "cmd": "      --kernel-memory bytes           ",
                "dcr": " Kernel memory limit"
            },
            {
                "cmd": "  -l, --label list                    ",
                "dcr": " Set meta data on a container"
            },
            {
                "cmd": "      --label-file list               ",
                "dcr": " Read in a line delimited file of labels"
            },
            {
                "cmd": "      --link list                     ",
                "dcr": " Add link to another container"
            },
            {
                "cmd": "      --link-local-ip list            ",
                "dcr": " Container IPv4\/IPv6 link-local addresses"
            },
            {
                "cmd": "      --log-driver string             ",
                "dcr": " Logging driver for the container"
            },
            {
                "cmd": "      --log-opt list                  ",
                "dcr": " Log driver options"
            },
            {
                "cmd": "      --mac-address string            ",
                "dcr": " Container MAC address (e.g., 92:d0:c6:0a:29:33)"
            },
            {
                "cmd": "  -m, --memory bytes                  ",
                "dcr": " Memory limit"
            },
            {
                "cmd": "      --memory-reservation bytes      ",
                "dcr": " Memory soft limit"
            },
            {
                "cmd": "      --memory-swap bytes             ",
                "dcr": " Swap limit equal to memory plus swap: '-1' to enable unlimited swap"
            },
            {
                "cmd": "      --memory-swappiness int         ",
                "dcr": " Tune container memory swappiness (0 to 100) (default -1)"
            },
            {
                "cmd": "      --mount mount                   ",
                "dcr": " Attach a filesystem mount to the container"
            },
            {
                "cmd": "      --name string                   ",
                "dcr": " Assign a name to the container"
            },
            {
                "cmd": "      --network string                ",
                "dcr": " Connect a container to a network (default \"default\")"
            },
            {
                "cmd": "      --network-alias list            ",
                "dcr": " Add network-scoped alias for the container"
            },
            {
                "cmd": "      --no-healthcheck                ",
                "dcr": " Disable any container-specified HEALTHCHECK"
            },
            {
                "cmd": "      --oom-kill-disable              ",
                "dcr": " Disable OOM Killer"
            },
            {
                "cmd": "      --oom-score-adj int             ",
                "dcr": " Tune host's OOM preferences (-1000 to 1000)"
            },
            {
                "cmd": "      --pid string                    ",
                "dcr": " PID namespace to use"
            },
            {
                "cmd": "      --pids-limit int                ",
                "dcr": " Tune container pids limit (set -1 for unlimited)"
            },
            {
                "cmd": "      --platform string               ",
                "dcr": " Set platform if server is multi-platform capable"
            },
            {
                "cmd": "      --privileged                    ",
                "dcr": " Give extended privileges to this container"
            },
            {
                "cmd": "  -p, --publish list                  ",
                "dcr": " Publish a container's port(s) to the host"
            },
            {
                "cmd": "  -P, --publish-all                   ",
                "dcr": " Publish all exposed ports to random ports"
            },
            {
                "cmd": "      --read-only                     ",
                "dcr": " Mount the container's root filesystem as read only"
            },
            {
                "cmd": "      --restart string                ",
                "dcr": " Restart policy to apply when a container exits (default \"no\")"
            },
            {
                "cmd": "      --rm                            ",
                "dcr": " Automatically remove the container when it exits"
            },
            {
                "cmd": "      --runtime string                ",
                "dcr": " Runtime to use for this container"
            },
            {
                "cmd": "      --security-opt list             ",
                "dcr": " Security Options"
            },
            {
                "cmd": "      --shm-size bytes                ",
                "dcr": " Size of \/dev\/shm"
            },
            {
                "cmd": "      --sig-proxy                     ",
                "dcr": " Proxy received signals to the process (default true)"
            },
            {
                "cmd": "      --stop-signal string            ",
                "dcr": " Signal to stop a container (default \"SIGTERM\")"
            },
            {
                "cmd": "      --stop-timeout int              ",
                "dcr": " Timeout (in seconds) to stop a container"
            },
            {
                "cmd": "      --storage-opt list              ",
                "dcr": " Storage driver options for the container"
            },
            {
                "cmd": "      --sysctl map                    ",
                "dcr": " Sysctl options (default map[])"
            },
            {
                "cmd": "      --tmpfs list                    ",
                "dcr": " Mount a tmpfs directory"
            },
            {
                "cmd": "  -t, --tty                           ",
                "dcr": " Allocate a pseudo-TTY"
            },
            {
                "cmd": "      --ulimit ulimit                 ",
                "dcr": " Ulimit options (default [])"
            },
            {
                "cmd": "  -u, --user string                   ",
                "dcr": " Username or UID (format: <name|uid>[:<group|gid>])"
            },
            {
                "cmd": "      --userns string                 ",
                "dcr": " User namespace to use"
            },
            {
                "cmd": "      --uts string                    ",
                "dcr": " UTS namespace to use"
            },
            {
                "cmd": "  -v, --volume list                   ",
                "dcr": " Bind mount a volume"
            },
            {
                "cmd": "      --volume-driver string          ",
                "dcr": " Optional volume driver for the container"
            },
            {
                "cmd": "      --volumes-from list             ",
                "dcr": " Mount volumes from the specified container(s)"
            },
            {
                "cmd": "  -w, --workdir string                ",
                "dcr": " Working directory inside the container"
            }
        ]
    }
}