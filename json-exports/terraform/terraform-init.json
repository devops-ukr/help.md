{
    "Command": "terraform init",
    "Usage": "terraform init [options] [DIR]",
    "Options": {
        "indent": 22,
        "data": {
            "-backend=true": "Configure the backend for this configuration.",
            "-backend-config=path": "This can be either a path to an HCL file with key/value assignments (same format as terraform.tfvars) or a 'key=value' format. This is merged with what is in the configuration file. This can be specified multiple times. The backend type must be in the configuration itself.",
            "-force-copy": "Suppress prompts about copying state data. This is equivalent to providing a \"yes\" to all confirmation prompts.",
            "-from-module=SOURCE": "Copy the contents of the given module into the target directory before initialization.",
            "-get=true": "Download any modules for this configuration.",
            "-get-plugins=true": "Download any missing plugins for this configuration.",
            "-input=true": "Ask for input if necessary. If false, will error if input was required.",
            "-lock=true": "Lock the state file when locking is supported.",
            "-lock-timeout=0s": "Duration to retry a state lock.",
            "-no-color": "If specified, output won't contain any color.",
            "-plugin-dir": "Directory containing plugin binaries. This overrides all default search paths for plugins, and prevents the automatic installation of plugins. This flag can be used multiple times.",
            "-reconfigure": "Reconfigure the backend, ignoring any saved configuration.",
            "-upgrade=false": "If installing modules (-get) or plugins (-get-plugins), ignore previously-downloaded objects and install the latest version allowed within configured constraints.",
            "-verify-plugins=true": "Verify the authenticity and integrity of automatically downloaded plugins."
        }
    },
    "Description": "Initialize a new or existing Terraform working directory by creating\n  initial files, loading any remote state, downloading modules, etc.\n  This is the first command that should be run for any new or existing\n  Terraform configuration per machine. This sets up all the local data\n  necessary to run Terraform that is typically not committed to version\n  control.\n  This command is always safe to run multiple times. Though subsequent runs\n  may give errors, this command will never delete your configuration or\n  state. Even so, if you have important information, please back it up prior\n  to running this command, just in case.\n  If no arguments are given, the configuration in this working directory\n  is initialized."
}